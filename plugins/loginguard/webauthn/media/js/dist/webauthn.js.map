{"version":3,"sources":["../webauthn.js"],"names":["akeeba","LoginGuard","webauthn","authData","arrayToBase64String","a","btoa","String","fromCharCode","setUp","navigator","alert","Joomla","JText","_","console","log","rawPKData","document","forms","querySelectorAll","value","publicKey","JSON","parse","atob","challenge","Uint8Array","from","window","c","charCodeAt","user","id","excludeCredentials","map","data","credentials","create","then","publicKeyCredential","type","rawId","response","clientDataJSON","attestationObject","getElementById","stringify","submit","error","handle_error","message","$","show","e","validate","allowCredentials","get","authenticatorData","signature","userHandle"],"mappings":"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","sourcesContent":["/*\n * @package   AkeebaLoginGuard\n * @copyright Copyright (c)2016-2020 Nicholas K. Dionysopoulos / Akeeba Ltd\n * @license   GNU General Public License version 3, or later\n */\n\n// Namespace\nlet akeeba = akeeba || {};\n\nakeeba.LoginGuard = akeeba.LoginGuard || {};\n\nakeeba.LoginGuard.webauthn = akeeba.LoginGuard.webauthn || {\n    authData: null\n};\n\n/**\n * Utility function to convert array data to base64 strings\n */\nakeeba.LoginGuard.webauthn.arrayToBase64String = (a) =>\n{\n    return btoa(String.fromCharCode(...a));\n};\n\n/**\n * Ask the user to link an authenticator using the provided public key (created server-side).\n */\nakeeba.LoginGuard.webauthn.setUp = () =>\n{\n    // Make sure the browser supports Webauthn\n    if (!('credentials' in navigator))\n    {\n        alert(Joomla.JText._('PLG_LOGINGUARD_WEBAUTHN_ERR_NOTAVAILABLE_HEAD'));\n\n        console.log('This browser does not support Webauthn');\n\n        return;\n    }\n\n    const rawPKData = document.forms['loginguard-method-edit'].querySelectorAll('input[name=\"pkRequest\"]')[0].value;\n    const publicKey = JSON.parse(atob(rawPKData));\n\n    // Convert the public key infomration to a format usable by the browser's credentials managemer\n    publicKey.challenge = Uint8Array.from(window.atob(publicKey.challenge), c => c.charCodeAt(0));\n    publicKey.user.id   = Uint8Array.from(window.atob(publicKey.user.id), c => c.charCodeAt(0));\n\n    if (publicKey.excludeCredentials)\n    {\n        publicKey.excludeCredentials = publicKey.excludeCredentials.map((data) => {\n            return {\n                ...data,\n                id: Uint8Array.from(window.atob(data.id), c => c.charCodeAt(0))\n            };\n        });\n    }\n\n    // Ask the browser to prompt the user for their authenticator\n    navigator.credentials.create({publicKey})\n        .then((data) => {\n            const publicKeyCredential = {\n                id:       data.id,\n                type:     data.type,\n                rawId:    akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.rawId)),\n                response: {\n                    clientDataJSON:    akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),\n                    attestationObject: akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.response.attestationObject))\n                }\n            };\n\n            // Store the WebAuthn reply\n            document.getElementById('loginguard-method-code').value = btoa(JSON.stringify(publicKeyCredential));\n\n            // Submit the form\n            document.forms['loginguard-method-edit'].submit();\n        }, (error) => {\n            // An error occurred: timeout, request to provide the authenticator refused, hardware / software error...\n            akeeba.LoginGuard.webauthn.handle_error(error);\n        });\n};\n\nakeeba.LoginGuard.webauthn.handle_error = (message) =>\n{\n    try\n    {\n        $('#loginguard-webauthn-button').show();\n    }\n    catch (e) {};\n\n    alert(message);\n\n    console.log(message);\n};\n\nakeeba.LoginGuard.webauthn.validate = () =>\n{\n    // Make sure the browser supports Webauthn\n    if (!('credentials' in navigator))\n    {\n        alert(Joomla.JText._('PLG_LOGINGUARD_WEBAUTHN_ERR_NOTAVAILABLE_HEAD'));\n\n        console.log('This browser does not support Webauthn');\n\n        return;\n    }\n\n    console.log(akeeba.LoginGuard.webauthn.authData);\n\n    const publicKey = akeeba.LoginGuard.webauthn.authData;\n\n    if (!publicKey.challenge)\n    {\n        akeeba.LoginGuard.webauthn.handle_error(Joomla.JText._('PLG_LOGINGUARD_WEBAUTHN_ERR_NO_STORED_CREDENTIAL'));\n\n        return;\n    }\n\n    publicKey.challenge        = Uint8Array.from(window.atob(publicKey.challenge), c => c.charCodeAt(0));\n    publicKey.allowCredentials = publicKey.allowCredentials.map((data) => {\n        return {\n            ...data,\n            id: Uint8Array.from(atob(data.id), c => c.charCodeAt(0))\n        };\n    });\n\n    navigator.credentials.get({publicKey})\n        .then(data => {\n            const publicKeyCredential = {\n                id:       data.id,\n                type:     data.type,\n                rawId:    akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.rawId)),\n                response: {\n                    authenticatorData: akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.response.authenticatorData)),\n                    clientDataJSON:    akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),\n                    signature:         akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(data.response.signature)),\n                    userHandle:        data.response.userHandle ? akeeba.LoginGuard.webauthn.arrayToBase64String(\n                        new Uint8Array(data.response.userHandle)) : null\n                }\n            };\n\n            document.getElementById('loginGuardCode').value = btoa(JSON.stringify(publicKeyCredential));\n            document.forms['loginguard-captive-form'].submit();\n        }, (error) => {\n            // Example: timeout, interaction refused...\n            console.log(error);\n            akeeba.LoginGuard.webauthn.handle_error(error);\n        });\n};\n"],"file":"webauthn.js"}