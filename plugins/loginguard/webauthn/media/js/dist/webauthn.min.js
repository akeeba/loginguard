function ownKeys(b,a){var c=Object.keys(b);Object.getOwnPropertySymbols&&c.push.apply(c,Object.getOwnPropertySymbols(b));a&&(c=c.filter(function(a){return Object.getOwnPropertyDescriptor(b,a).enumerable}));return c}
function _objectSpread(b){for(var a=1;a<arguments.length;a++){var c=null!=arguments[a]?arguments[a]:{};a%2?ownKeys(c,!0).forEach(function(a){_defineProperty(b,a,c[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(b,Object.getOwnPropertyDescriptors(c)):ownKeys(c).forEach(function(a){Object.defineProperty(b,a,Object.getOwnPropertyDescriptor(c,a))})}return b}
function _defineProperty(b,a,c){a in b?Object.defineProperty(b,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):b[a]=c;return b}function _toConsumableArray(b){return _arrayWithoutHoles(b)||_iterableToArray(b)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(b){if(Symbol.iterator in Object(b)||"[object Arguments]"===Object.prototype.toString.call(b))return Array.from(b)}
function _arrayWithoutHoles(b){if(Array.isArray(b)){for(var a=0,c=Array(b.length);a<b.length;a++)c[a]=b[a];return c}}var akeeba=akeeba||{};akeeba.LoginGuard=akeeba.LoginGuard||{};akeeba.LoginGuard.webauthn=akeeba.LoginGuard.webauthn||{authData:null};akeeba.LoginGuard.webauthn.arrayToBase64String=function(b){return btoa(String.fromCharCode.apply(String,_toConsumableArray(b)))};
akeeba.LoginGuard.webauthn.setUp=function(){if("credentials"in navigator){var b=document.forms["loginguard-method-edit"].querySelectorAll('input[name="pkRequest"]')[0].value,b=JSON.parse(atob(b));b.challenge=Uint8Array.from(window.atob(b.challenge),function(a){return a.charCodeAt(0)});b.user.id=Uint8Array.from(window.atob(b.user.id),function(a){return a.charCodeAt(0)});b.excludeCredentials&&(b.excludeCredentials=b.excludeCredentials.map(function(a){return _objectSpread({},a,{id:Uint8Array.from(window.atob(a.id),
function(a){return a.charCodeAt(0)})})}));navigator.credentials.create({publicKey:b}).then(function(a){a={id:a.id,type:a.type,rawId:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.rawId)),response:{clientDataJSON:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.response.clientDataJSON)),attestationObject:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.response.attestationObject))}};document.getElementById("loginguard-method-code").value=btoa(JSON.stringify(a));
document.forms["loginguard-method-edit"].submit()},function(a){akeeba.LoginGuard.webauthn.handle_error(a)})}else alert(Joomla.JText._("PLG_LOGINGUARD_WEBAUTHN_ERR_NOTAVAILABLE_HEAD")),console.log("This browser does not support Webauthn")};akeeba.LoginGuard.webauthn.handle_error=function(b){try{$("#loginguard-webauthn-button").show()}catch(a){}alert(b);console.log(b)};
akeeba.LoginGuard.webauthn.validate=function(){if("credentials"in navigator){console.log(akeeba.LoginGuard.webauthn.authData);var b=akeeba.LoginGuard.webauthn.authData;b.challenge?(b.challenge=Uint8Array.from(window.atob(b.challenge),function(a){return a.charCodeAt(0)}),b.allowCredentials=b.allowCredentials.map(function(a){return _objectSpread({},a,{id:Uint8Array.from(atob(a.id),function(a){return a.charCodeAt(0)})})}),navigator.credentials.get({publicKey:b}).then(function(a){a={id:a.id,type:a.type,
rawId:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.rawId)),response:{authenticatorData:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.response.authenticatorData)),clientDataJSON:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.response.clientDataJSON)),signature:akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.response.signature)),userHandle:a.response.userHandle?akeeba.LoginGuard.webauthn.arrayToBase64String(new Uint8Array(a.response.userHandle)):
null}};document.getElementById("loginGuardCode").value=btoa(JSON.stringify(a));document.forms["loginguard-captive-form"].submit()},function(a){console.log(a);akeeba.LoginGuard.webauthn.handle_error(a)})):akeeba.LoginGuard.webauthn.handle_error(Joomla.JText._("PLG_LOGINGUARD_WEBAUTHN_ERR_NO_STORED_CREDENTIAL"))}else alert(Joomla.JText._("PLG_LOGINGUARD_WEBAUTHN_ERR_NOTAVAILABLE_HEAD")),console.log("This browser does not support Webauthn")}; //# sourceMappingURL=webauthn.map
